shiny::runApp()
library(hrbrthemes)
library(viridis)
library(ggridges)
library(shiny)
library(ggplot2)
library(data.table)
library(DT)
library(shiny)
library(ggplot2)
library(data.table)
library(DT)
runApp()
runApp()
runApp('~/GitHub/BAna-DS/xb_predictions/xb')
runApp('~/GitHub/BAna-DS/xb_predictions/xb')
runApp('~/GitHub/BAna-DS/protype_1/protype_1')
runApp()
library(Metrics)
library(tidyverse)
library(corrplot)
library(Hmisc)
library(dlstats) #package to check download statistics of packages
library(tree)
library(randomForest)
library(e1071)
library(xgboost)
library(MuMIn)
#Data----
setwd("~/GitHub/BAna-DS")
ohie <- readRDS("OHIE_Wrangled.RDS")
#dependent variable: charge_total <- includes all charges and food assistance is not paid for by insurance
formula <- "charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression +
any_ed_psychiatric_condition_or_substance_abuse + food_assistance + charge_food_assistance +
temporary_assistance + charge_temporary_assistance"
#dataframe with all variables that could generally be included in the model
ohieVariables <- ohie %>%
select(!c("person_id", "treatment", "dt_retro_coverage", "numhh_list", "numhh_list",
"ed_charge_total", "zip_msa_list")) #zip_msa_list would generally work as predictor but it
ohieVariables$sex <- as.numeric(ohieVariables$sex=="Female")
#no imputation
set.seed(1111)
index <- sample(x=c(1:length(ohie$person_id)), size=trunc(length(ohie$person_id)*0.7), replace = FALSE)
train <- ohieVariables[index,]
test <- ohieVariables[-index,]
#listwise deletion
ohieVariables_nNA <- drop_na(ohieVariables)
#dataframe with variables removed, that showed to decrease model performance
ohieVariables2 <- select(ohieVariables, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance"))
ohieVariables_nNA2 <- drop_na(ohieVariables2)
#does not result in any more observations i.e. does not make a difference for model performance if
#imputation method is listwise deletion
set.seed(1111)
index_nNA <- sample(x=c(1:length(ohieVariables_nNA$age)), size=trunc(length(ohieVariables_nNA$age)*0.7),
replace = FALSE)
train_nNA <- ohieVariables_nNA[index_nNA,]
test_nNA <- ohieVariables_nNA[-index_nNA,]
#Recalculating the currently best performing model to export it
featuresBt_aci <- as.matrix(select(ohieVariables_nNA, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance", "charge_total")))
m.bt_3d.2 <- xgboost(
data = featuresBt_aci,
label = ohieVariables_nNA$charge_total,
nrounds = 100,
nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
featuresBt_aci <- as.matrix(select(train_nNA, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance", "charge_total")))
testBt_aci <- as.matrix(select(test_nNA, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance", "charge_total")))
pr.bt_3d.2 <- predict(m.bt_3d.2, newdata = )
pr.bt_3d.2 <- predict(m.bt_3d.2, newdata = testBt_aci)
m.bt_3d.2 <- xgboost(
data = featuresBt_aci,
label = ohieVariables_nNA$charge_total,
nrounds = 29,
nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
trainBt_aci <- as.matrix(select(train_nNA, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance", "charge_total")))
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = ohieVariables_nNA$charge_total,
nrounds = 29,
nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
trainBt_aci <- as.matrix(select(train_nNA, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance", "charge_total")))
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = ohieVariables_nNA$charge_total,
nrounds = 29,
nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = trainBt_aci$charge_total,
nrounds = 29,
nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
str(trainBt_aci)
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = trainBt_nNA$charge_total,
nrounds = 29,
nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = train_nNA$charge_total,
nrounds = 29,
nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = train_nNA$charge_total,
nrounds = 29,
#nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
pr.bt_3d.2 <- predict(m.bt_3d.2, newdata = testBt_aci)
rmse(test_nNA$charge_total, p.bt_3d.2)
rmse(test_nNA$charge_total, pr.bt_3d.2)
set.seed(1111)
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = train_nNA$charge_total,
nrounds = 29,
#nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
pr.bt_3d.2 <- predict(m.bt_3d.2, newdata = testBt_aci)
rmse(test_nNA$charge_total, pr.bt_3d.2)
xgboost()
?xgboost()
set.seed(1111)
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = train_nNA$charge_total,
nrounds = 200, #29
#nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
pr.bt_3d.2 <- predict(m.bt_3d.2, newdata = testBt_aci)
rmse(test_nNA$charge_total, pr.bt_3d.2)
set.seed(1111)
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = train_nNA$charge_total,
nrounds = 29,
#nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 5)
pr.bt_3d.2 <- predict(m.bt_3d.2, newdata = testBt_aci)
rmse(test_nNA$charge_total, pr.bt_3d.2)
trainBt_aci <- as.matrix(select(train_nNA, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance", "charge_total")))
testBt_aci <- as.matrix(select(test_nNA, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance", "charge_total")))
set.seed(1111)
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = train_nNA$charge_total,
nrounds = 29,
#nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
pr.bt_3d.2 <- predict(m.bt_3d.2, newdata = testBt_aci)
rmse(test_nNA$charge_total, pr.bt_3d.2)
set.seed(1112)
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = train_nNA$charge_total,
nrounds = 29,
#nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
pr.bt_3d.2 <- predict(m.bt_3d.2, newdata = testBt_aci)
rmse(test_nNA$charge_total, pr.bt_3d.2)
set.seed(1113)
m.bt_3d.2 <- xgboost(
data = trainBt_aci,
label = train_nNA$charge_total,
nrounds = 29,
#nfold = 5,    #one is for testing the rest is used for training
objective = "reg:squarederror",  # for regression models, linear is depreciated
verbose = 0,   # silent,
max_depth = 3)
pr.bt_3d.2 <- predict(m.bt_3d.2, newdata = testBt_aci)
rmse(test_nNA$charge_total, pr.bt_3d.2)
?rmse
rmse(test_nNA$charge_total, pr.bt_3d.2)
?rmse
install.packages("neuralnet")
saveRDS(m.bt_3d.2, file="~/GitHub/BAna-DS/ohieBoostingModel.RDS")
View(trainBt_aci)
?as.matrix
base::trainBt_aci <- as.matrix(select(train_nNA, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance", "charge_total")))
?uunlist
?unlist
?matrix
