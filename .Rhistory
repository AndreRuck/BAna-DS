#model with highest AICc
m.lm_aic <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, train_nNA, train_nNA, na.action = "na.fail")
#model with highest AICc
m.lm_aic <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, train_nNA, train_nNA, na.action = "na.fail")
rm(m.lm_aic)
#model with highest AICc
m.lm_aic <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, train_nNA, train_nNA, na.action = "na.fail")
#model with highest AICc
m.lm_aic <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, train_nNA, na.action = "na.fail")
p.lm_aic <- predict.lm(m.lm_aic, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_aic) #[1] 19546.31
View(m.lm_aic)
#features that were used in the model with the highest AIC
m.fo_aic <- randomForest(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, train_nNA, na.action = "na.fail")
p.fo_aic <- predict.lm(m.fo_aic, newdata = test_nNA)
rmse(test_nNA$charge_total, p.fo_aic)
p.fo_aic <- predict(m.fo_aic, newdata = test_nNA)
rmse(test_nNA$charge_total, p.fo_aic)
sqrt(16550.61)
#features that were used in the model with the highest AIC in lm
m.sv_aic <- svm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, train_nNA, na.action = "na.fail")
#features that were used in the model with the highest AIC in lm
m.sv_aic <- svm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, train_nNA, na.action = "na.fail")
#features that were used in the model with the highest AIC in lm
m.sv_aic <- svm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, train_nNA)
p.sv_aic <- predict(m.sv_aic, newdata = test_nNA)
rmse(test_nNA$charge_total, p.sv_aic) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, sex:any_ed_headache, train_nNA, na.action = "na.fail")
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, sex:any_ed_headache, train_nNA)
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:any_ed_depression, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age, sex:any_ed_visits, train_nNA)
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits + sex:any_ed_chronic_condition, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits + sex:any_ed_chronic_condition + sex:any_ed_injury, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits + sex:any_ed_chronic_condition + sex:any_ed_injury +
sex:any_ed_skin_condition, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits + sex:any_ed_chronic_condition + sex:any_ed_injury +
sex:any_ed_abdominal_pain, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits + sex:any_ed_chronic_condition + sex:any_ed_injury +
sex:any_ed_back_pain, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits + sex:any_ed_chronic_condition + sex:any_ed_injury +
sex:any_ed_back_pain + sex:any_ed_heart_or_chest_pain, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits + sex:any_ed_chronic_condition + sex:any_ed_injury +
sex:any_ed_back_pain + sex:charge_food_assistance, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits + sex:any_ed_chronic_condition + sex:any_ed_injury +
sex:any_ed_back_pain + sex:charge_charge_temporary_assistance, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding interaction terms with variable sex to highest AICc model
m.lm_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits + sex:any_ed_chronic_condition + sex:any_ed_injury +
sex:any_ed_back_pain, train_nNA)
p.lm_it <- predict.lm(m.lm_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_it) #
#adding esxplicit interactions, namely those interactions with sex that were found to be helpful in the lm model
m.fo_it <- lm(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits + sex:any_ed_chronic_condition + sex:any_ed_injury +
sex:any_ed_back_pain, train_nNA)
#adding esxplicit interactions, namely those interactions with sex that were found to be helpful in the lm model
m.fo_it <- randomForest(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits + any_ed_chronic_condition +
any_ed_injury + any_ed_skin_condition + any_ed_abdominal_pain + any_ed_back_pain +
any_ed_heart_or_chest_pain + any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance + sex:any_ed_headache + sex:preperiod_any_visits +
sex:age + sex:any_ed_visits + sex:any_ed_chronic_condition + sex:any_ed_injury +
sex:any_ed_back_pain, train_nNA)
p.lm_fo <- predict(m.fo_it, newdata = test_nNA)
rmse(test_nNA$charge_total, p.lm_fo)
table(c("charge_total", "preperiod_any_visits", "age", "sex", "any_ed_visits", "any_ed_chronic_condition", "any_ed_injury",
"any_ed_skin_condition", "any_ed_abdominal_pain", "any_ed_back_pain", "any_ed_heart_or_chest_pain", "any_ed_headache",
"any_ed_depression", "any_ed_psychiatric_condition_or_substance_abuse", "food_assistance", "charge_food_assistance",
"temporary_assistance", "charge_temporary_assistance", "charge_total", "preperiod_any_visits", "age", "sex", "any_ed_visits",
"any_ed_chronic_condition", "any_ed_injury", "any_ed_skin_condition", "any_ed_abdominal_pain", "any_ed_back_pain",
"any_ed_heart_or_chest_pain", "any_ed_headache", "any_ed_depression", "charge_food_assistance", "charge_temporary_assistance"))
"temporary_assistance"))
ohieVariables_nNA2 <- drop_na(select(ohieVariables, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance")))
ohieVariables_nNA2 <- drop_na(ohieVariables2)
#dataframe with variables removed, that showed to decrease model performance
ohieVariables2 <- select(ohieVariables, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance"))
ohieVariables_nNA2 <- drop_na(ohieVariables2)
?randomForest
?cran_stats
install.packages("dlstats")
library(dlstats)
a <- cran_stats(c("MICE", "Amelia", "missForest", "Hmisc", "mi"))
View(a)
?cran_stats
if (!is.null(a)) {
head(a)
ggplot(a, aes(end, downloads, group=package, color=package)) +
geom_line() + geom_point(aes(shape=package))
}
?with
install.packages("Hmisc")
library(Hmisc)
?rmse
metrics::rmse(test_nNA$charge_total, p.lm_aic) #[1] 16700.77
modelr::rmse(test_nNA$charge_total, p.lm_aic) #[1] 16700.77
?drop_na
View(ohieVariables)
#mean substitution (with Hmisc)
ohieVariables_DepnNA <- drop_na(ohieVariables, any_of(charge_total))
#mean substitution (with Hmisc)
ohieVariables_DepnNA <- drop_na(ohieVariables, any_of("charge_total"))
save(dred.lm, "dred.lm")
#Data----
setwd("~/GitHub/BAna-DS")
save(dred.lm, "dred.lm")
save(dred.lm, "~/GitHub/BAna-DS/dred.lm")
save(dred.lm, "~/GitHub/BAna-DS")
save(dred.lm, file = "~/GitHub/BAna-DS/dred.lm")
save(dred.lm, file = "~/GitHub/BAna-DS/dredlm.RData")
saveRDS(dred.lm, file = "~/GitHub/BAna-DS/dredlm.rds")
library(neuralnet)
install.packages("neuralnet")
library(tidyverse)
library(neuralnet)
#Normalize data
scale01 <- function(x){
(x - min(x)) / (max(x) - min(x))
}
data <- readRDS("OHIE_Wrangled.RDS")
View(data)
View(data)
#Normalize data
#can only use data points that are scalable
summary(data)
library(caret)
data[,1]
data[,c(3,4)]
#Normalize data
#can only use data points that are scalable
summary(data)
ohie <- readRDS("OHIE_Wrangled.RDS")
#dataframe with all variables that could generally be included in the model
ohieVariables <- ohie %>%
select(!c("person_id", "treatment", "dt_retro_coverage", "numhh_list", "numhh_list",
"ed_charge_total", "zip_msa_list")) #zip_msa_list would generally work as predictor but it
library(Metrics)
library(tidyverse)
library(corrplot)
library(Hmisc)
library(dlstats) #package to check download statistics of packages
library(tree)
library(randomForest)
library(e1071)
library(MuMIn)
#dataframe with all variables that could generally be included in the model
ohieVariables <- ohie %>%
select(!c("person_id", "treatment", "dt_retro_coverage", "numhh_list", "numhh_list",
"ed_charge_total", "zip_msa_list")) #zip_msa_list would generally work as predictor but it
View(ohieVariables)
#dataframe with variables removed, that showed to decrease model performance
ohieVariables2 <- select(ohieVariables, !c("any_ed_psychiatric_condition_or_substance_abuse", "food_assistance",
"temporary_assistance"))
View(ohieVariables2)
saveRDS(ohieVariables2, "OHIE_Final_Selection.RDS")
#Normalize data
#can only use data points that are scalable
summary(data)
data <- readRDS("OHIE_Final_Selection.RDS")
#Normalize data
#can only use data points that are scalable
summary(data)
as.numeric(data)
str(data)
as.numeric(data$sex)
as.integer(data$sex)
View(data)
data_scalable <- data[,c(1,2,3)]
#Standardization
preproc1 <- preProcess(data_scalable, method = c("center", "scale"))
data_standardized <- predict(preproc1, data_scalable)
#Standardization
preproc1 <- preProcess(data_scalable, method = c("center", "scale"))
library(tidyverse)
library(neuralnet)
library(caret)
#Standardization
preproc1 <- preProcess(data_scalable, method = c("center", "scale"))
data_standardized <- predict(preproc1, data_scalable)
View(data_standardized)
str(data_standardized)
View(data_standardized)
data$sex <- as.integer(data$sex)
data_scalable <- data[,c(1,2,3)]
#Standardization
preproc1 <- preProcess(data_scalable, method = c("center", "scale"))
data_standardized <- predict(preproc1, data_scalable)
str(data_standardized)
View(preproc1)
View(data_standardized)
#Standardization
preproc1 <- preProcess(data_scalable, method = c("range"))
data_standardized <- predict(preproc1, data_scalable)
str(data_standardized)
View(preproc1)
View(data_standardized)
data_scalable <- data[,c(1,2,3,4)]
#Standardization
preproc1 <- preProcess(data_scalable, method = c("range"))
data_standardized <- predict(preproc1, data_scalable)
View(data_standardized)
data$any_ed_visits <- as.numeric(data$any_ed_visits)
View(data)
data$sex <- as.numeric(data$sex)
data$any_ed_visits <- as.numeric(data$any_ed_visits)
data$any_ed_chronic_condition <- as.numeric(data$any_ed_chronic_condition)
data[,3:12]
data[,3:12] <- as.numeric(data[,3:12])
data$sex <- as.numeric(data$sex)
data[,3:12] <- as.numeric(data[,3:12])
data[,3:12] <- mutate(data[,3:12], as.numeric)
data <- readRDS("OHIE_Final_Selection.RDS")
#Normalize data
#can only use data points that are scalable
summary(data)
str(data)
mutate_if(data, is.logical, as.numeric)
data$sex <- as.numeric(data$sex)
data <- mutate_if(data, is.logical, as.numeric)
data_scalable <- data[,c(1,2,3,4)]
#Standardization
preproc1 <- preProcess(data_scalable, method = c("range"))
data_standardized <- predict(preproc1, data_scalable)
View(data_standardized)
data <- mutate_if(data, is.logical, as.numeric)
data_scalable <- data
#Standardization
preproc1 <- preProcess(data_scalable, method = c("range"))
data_standardized <- predict(preproc1, data_scalable)
View(data_standardized)
str(data_standardized)
View(data)
View(preproc1)
View(data_standardized)
#Normalize data
summary(data)
data <- readRDS("OHIE_Final_Selection.RDS")
#Normalize data
summary(data)
str(data)
View(data)
#Standardization
preproc1 <- preProcess(data[,1:14], method = c("range"))
data_standardized <- predict(preproc1, data_scalable)
data_standardized <- predict(preproc1, data[,1:14])
View(data_standardized)
data[,1:14]
data[,1:12]
#Standardization
preproc1 <- preProcess(data[,1:12], method = c("range"))
data_standardized <- predict(preproc1, data[,1:12])
View(data_standardized)
data_standardized <- predict(preproc1, data[,1:13])
View(data_standardized)
data$sex <- as.numeric(data$sex)
data <- mutate_if(data, is.logical, as.numeric)
View(data)
#Standardization
preproc1 <- preProcess(data[,1:12], method = c("range"))
data_standardized <- predict(preproc1, data[,1:12])
data_standadrized <- bind_cols(data_standadrized, data[,13:15])
data_standadrized <- bind_cols(data_standardized, data[,13:15])
data <- readRDS("OHIE_Final_Selection.RDS")
#Normalize data
summary(data)
str(data)
data$sex <- as.numeric(data$sex)
data <- mutate_if(data, is.logical, as.numeric)
data[,1:12]
#Standardization
preproc1 <- preProcess(data[,1:12], method = c("range"))
data_standardized <- predict(preproc1, data[,1:12])
data_standardized <- bind_cols(data_standardized, data[,13:15])
str(data_standardized)
View(data_standardized)
n <- nrow(data_standardized)
index <- sample(1:n, size = round(0.7*n), replace=FALSE)
set.seed(69)
#Test and Train Data
n <- nrow(data_standardized)
set.seed(69)
index <- sample(1:n, size = round(0.7*n), replace=FALSE)
train <- data_standardized[index]
train <- data_standardized[index,]
test <-data_standardized[-index,]
data_standardized <- predict(preproc1, data[,c(1:12,14:15)])
data_standardized <- bind_cols(data_standardized, data[,13])
#Min Max scaling
preproc1 <- preProcess(data[,c(1:12,14:15)], method = c("range"))
data_standardized <- predict(preproc1, data[,c(1:12,14:15)])
data_standardized <- bind_cols(data_standardized, data[,13])
View(data_standardized)
str(data_standardized)
#Test and Train Data
n <- nrow(data_standardized)
set.seed(69)
index <- sample(1:n, size = round(0.7*n), replace=FALSE)
train <- data_standardized[index,]
test <-data_standardized[-index,]
#formula for NN
feats <- names(data_standardized)
# Concatenate strings
f <- paste(feats,collapse=' + ')
f <- paste('Private ~',f)
### formula for NN
feats <- names(data_standardized)
### formula for NN
feats <- names(data_standardized[,1:14])
# Concatenate strings
f <- paste(feats,collapse=' + ')
View(test)
f <- paste("charge_total ~",f)
# Convert to formula
f <- as.formula(f)
f
library(neuralnet)
#First NN
nn <- neuralnet(f,train,hidden=c(10,10,10),linear.output=FALSE)
#First NN
nn <- neuralnet(f,data = train)
#First NN
nn <- neuralnet(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits +
any_ed_chronic_condition + any_ed_injury + any_ed_skin_condition +
any_ed_abdominal_pain + any_ed_back_pain + any_ed_heart_or_chest_pain +
any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, data = train)
nn1 <- neuralnet(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits +
any_ed_chronic_condition + any_ed_injury + any_ed_skin_condition +
any_ed_abdominal_pain, data = train)
# imputation
data_nNA1 <- drop_na(ohieVariables2)
# imputation
data_nNA1 <- drop_na(data)
View(data_nNA1)
summary(data_nNA1)
str(data_nNA1)
datanNA1$sex <- as.numeric(data_nNA1$sex)
data <- mutate_if(data_nNA1, is.logical, as.numeric)
data <- readRDS("OHIE_Final_Selection.RDS")
# imputation
data_nNA1 <- drop_na(data)
summary(data_nNA1)
str(data_nNA1)
datanNA1$sex <- as.numeric(data_nNA1$sex)
data_nNA1$sex <- as.numeric(data_nNA1$sex)
data_nNA1 <- mutate_if(data_nNA1, is.logical, as.numeric)
#Min Max scaling
preproc1 <- preProcess(data_nNA1[,c(1:12,14:15)], method = c("range"))
data_standardized <- predict(preproc1, data_nNA1[,c(1:12,14:15)])
data_standardized <- bind_cols(data_standardized, data_nNA1[,13])
str(data_standardized)
#Test and Train Data
n <- nrow(data_standardized)
set.seed(69)
index <- sample(1:n, size = round(0.7*n), replace=FALSE)
train <- data_standardized[index,]
test <-data_standardized[-index,]
### formula for NN
feats <- names(data_standardized[,1:14])
# Concatenate strings
f <- paste(feats,collapse=' + ')
f <- paste("charge_total ~",f)
# Convert to formula
f <- as.formula(f)
#First NN
nn <- neuralnet(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits +
any_ed_chronic_condition + any_ed_injury + any_ed_skin_condition +
any_ed_abdominal_pain + any_ed_back_pain + any_ed_heart_or_chest_pain +
any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, data = train)
#First NN
nn1 <- neuralnet(charge_total ~ preperiod_any_visits + age + sex + any_ed_visits +
any_ed_chronic_condition + any_ed_injury + any_ed_skin_condition +
any_ed_abdominal_pain + any_ed_back_pain + any_ed_heart_or_chest_pain +
any_ed_headache + any_ed_depression + charge_food_assistance +
charge_temporary_assistance, data = train)
plot(nn1, rep = 'best')
